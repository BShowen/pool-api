type AccountOwner {
  firstName: String
  lastName: String
  emailAddress: String
  phoneNumber: String
  id: ID
}

type CustomerAccount {
  accountName: String
  serviceType: String
  serviceDay: String
  serviceFrequency: String
  address: String
  price: Float
  companyId: ID
  id: ID
  technicianId: ID
  accountOwners: [AccountOwner]!
}

input AccountOwnerInput {
  firstName: String
  lastName: String
  emailAddress: String
  phoneNumber: String
  id: ID
}

input CustomerAccountInput {
  accountName: String
  serviceType: String
  serviceDay: String
  serviceFrequency: String
  address: String
  price: Float
  accountOwners: [AccountOwnerInput!]!
  id: ID
}

input UpdateAccountOwnerInput {
  firstName: String!
  lastName: String!
  emailAddress: String!
  phoneNumber: String!
  id: ID
}

input UpdateCustomerAccountInput {
  accountName: String
  serviceType: String
  serviceDay: String
  serviceFrequency: String
  address: String
  price: Float
  accountOwners: [UpdateAccountOwnerInput]
  companyId: ID
  id: ID!
  technicianId: ID
}

type Query {
  "Get a list of customers"
  getCustomerAccountList: [CustomerAccount]!
  "Get a customer by id"
  getCustomerAccount(id: ID): CustomerAccount
}

type Mutation {
  "Create a new customer account"
  createNewCustomerAccount(
    customerAccountInput: CustomerAccountInput
  ): CustomerAccount
  "Delete a customer account"
  deleteCustomerAccount(id: ID): Boolean!
  "Update a customer account"
  updateCustomerAccount(
    customerAccountInput: UpdateCustomerAccountInput
  ): CustomerAccount
}
