type CustomerAccount {
  accountName: String
  serviceType: String
  serviceDay: String
  serviceFrequency: String
  address: String
  price: Float
  "The company this account belongs to."
  company: ID
  id: ID
  "The technician that services this account."
  technician: Technician
  accountOwners: [Customer]!
}

# The type returned in the ServiceRoute.customerAccounts array.
# This is the same type as CustomerAccount with some fields removed.
type ServiceRouteCustomerAccount {
  accountName: String
  serviceType: String
  serviceDay: String
  serviceFrequency: String
  address: String
  price: Float
  id: ID
  accountOwners: [Customer]!
  latestPoolReport: PoolReport
  poolReports: [PoolReport]!
}

input CustomerAccountInput {
  accountName: String!
  serviceType: String!
  serviceDay: String!
  serviceFrequency: String!
  address: String!
  price: Float!
}

input NewCustomerAccount {
  account: CustomerAccountInput!
  accountOwners: [CustomerInput!]!
}

input UpdateCustomerAccountInput {
  accountName: String
  serviceType: String
  serviceDay: String
  serviceFrequency: String
  address: String
  price: Float
  id: ID!
  technician: ID
}

type Query {
  "Get a list of customer accounts"
  customerAccountList: [CustomerAccount]!
  "Get a single customer account"
  customerAccount(accountId: ID!): CustomerAccount
}

type Mutation {
  "Create a new customer account"
  newCustomerAccount(input: NewCustomerAccount): CustomerAccount
  "Delete a customer account"
  deleteCustomerAccount(accountId: ID): CustomerAccount!
  "Update a customer account"
  updateCustomerAccount(input: UpdateCustomerAccountInput): CustomerAccount
}
